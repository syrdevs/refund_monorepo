{"version":3,"sources":["../../../src/Redux/store.js"],"names":["sagaMiddlewareWatcher","combineReducersData","models","forEach","model","Object","keys","effects","effectItemKey","push","namespace","payload","call","put","action","type","state","actionType","replace","reducers","sagaMiddleware","store","run","map","fork"],"mappings":";;;;;;;AAAA;;AACA;;AACA;;AACA;;AACA;;AACA;;;;;;;;;;AAEA,IAAIA,qBAAqB,GAAG,EAA5B;AACA,IAAIC,mBAAmB,GAAG,EAA1B;;AACAC,eAAOC,OAAP,CAAe,UAACC,KAAD,EAAW;AAExBC,EAAAA,MAAM,CAACC,IAAP,CAAYF,KAAK,CAACG,OAAlB,EAA2BJ,OAA3B,CAAmC,UAACK,aAAD,EAAmB;AACpDR,IAAAA,qBAAqB,CAACS,IAAtB;AAAA;AAAA,4BAA2B;AAAA;AAAA;AAAA;AAAA;AAAA;AACzB,qBAAM,wBAAUL,KAAK,CAACM,SAAN,GAAkB,GAAlB,GAAwBF,aAAlC;AAAA;AAAA,sCAAiD,iBAAWG,OAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAErD,+BAAMP,KAAK,CAACG,OAAN,CAAcC,aAAd,EAA6BG,OAA7B,EAAsC;AAC1CC,0BAAAA,IAAI,EAAJA,aAD0C;AAE1CC,0BAAAA,GAAG;AAAA;AAAA,kDAAE,aAAWC,MAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AACH,2CAAM,oCACDA,MADC;AAEJC,sCAAAA,IAAI,EAAEX,KAAK,CAACM,SAAN,GAAkB,GAAlB,GAAwBI,MAAM,CAACC;AAFjC,uCAAN;;AADG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BAAF;AAFuC,yBAAtC,CAAN;;AAFqD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAAjD,EAAN;;AADyB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA3B;AAgBD,GAjBD;;AAmBAd,EAAAA,mBAAmB,CAACG,KAAK,CAACM,SAAP,CAAnB,GAAuC,YAAiC;AAAA,QAAhCM,KAAgC,uEAAxBZ,KAAK,CAACY,KAAkB;AAAA,QAAXF,MAAW;AACtE,QAAIG,UAAU,GAAGH,MAAM,CAACC,IAAP,CAAYG,OAAZ,CAAoBd,KAAK,CAACM,SAAN,GAAkB,GAAtC,EAA2C,EAA3C,CAAjB;;AACA,QAAIN,KAAK,CAACe,QAAN,CAAeF,UAAf,CAAJ,EAAgC;AAC9Bb,MAAAA,KAAK,CAACY,KAAN,GAAcZ,KAAK,CAACe,QAAN,CAAeF,UAAf,EAA2BD,KAA3B,EAAkCF,MAAlC,CAAd;AACD;;AACD,WAAOV,KAAK,CAACY,KAAb;AACD,GAND;AAOD,CA5BD;;AA+BA,IAAMI,cAAc,GAAG,yBAAvB;AACA,IAAMC,KAAK,GAAG,wBACZ,4BAAgBpB,mBAAhB,CADY,EAEZ,4BAAgBmB,cAAhB,CAFY,CAAd;AAIAA,cAAc,CAACE,GAAf;AAAA;AAAA,wBAAmB;AAAA;AAAA;AAAA;AAAA;AAAA;AACjB,iBAAM,kBAAItB,qBAAqB,CAACuB,GAAtB,CAA0BC,aAA1B,CAAJ,CAAN;;AADiB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAAnB;eAKeH,K","sourcesContent":["import \"babel-polyfill\";\r\nimport { createStore, applyMiddleware, combineReducers } from \"redux\";\r\nimport createSagaMiddleware from \"redux-saga\";\r\nimport { put, call, takeEvery, fork, all } from \"redux-saga/effects\";\r\nimport React, { Suspense, lazy } from \"react\";\r\nimport models from \"./model.config\";\r\n\r\nlet sagaMiddlewareWatcher = [];\r\nlet combineReducersData = {};\r\nmodels.forEach((model) => {\r\n\r\n  Object.keys(model.effects).forEach((effectItemKey) => {\r\n    sagaMiddlewareWatcher.push(function* () {\r\n      yield takeEvery(model.namespace + \"/\" + effectItemKey, function* (payload) {\r\n\r\n        yield model.effects[effectItemKey](payload, {\r\n          call,\r\n          put: function* (action) {\r\n            yield put({\r\n              ...action,\r\n              type: model.namespace + \"/\" + action.type\r\n            });\r\n          }\r\n        });\r\n\r\n\r\n      });\r\n    });\r\n  });\r\n\r\n  combineReducersData[model.namespace] = (state = model.state, action) => {\r\n    let actionType = action.type.replace(model.namespace + \"/\", \"\");\r\n    if (model.reducers[actionType]) {\r\n      model.state = model.reducers[actionType](state, action);\r\n    }\r\n    return model.state;\r\n  };\r\n});\r\n\r\n\r\nconst sagaMiddleware = createSagaMiddleware();\r\nconst store = createStore(\r\n  combineReducers(combineReducersData),\r\n  applyMiddleware(sagaMiddleware)\r\n);\r\nsagaMiddleware.run(function* () {\r\n  yield all(sagaMiddlewareWatcher.map(fork));\r\n});\r\n\r\n\r\nexport default store;"],"file":"store.js"}