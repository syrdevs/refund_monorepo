{"version":3,"sources":["../../../src/models/universal2.js"],"names":["namespace","state","reportParametersData","reportFormedData","dataStore","columns","contractData","references","publish","effects","getContractById","payload","call","put","getObject","response","type","getPublish","getList","entity","formedReports","getFormedReports","reportParameters","getReportParameters","reportsData","getReportsList","statisticsData","getStaticticsData","journalData","getJournalData","clear","data","getData","getColumns","clearContract","reducers","getPublishReducer","getListDataByContract","loading","getListData","clearData","formedReportsData","clearContractData"],"mappings":"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","sourcesContent":["import {\r\n  getColumns,\r\n  getData,\r\n  getJournalData,\r\n  getStaticticsData,\r\n  getReportsList,\r\n  getReportParameters,\r\n  getFormedReports,\r\n  getList, getObject, getPublish\r\n} from '../services/api';\r\n\r\nexport default {\r\n  namespace: 'universal2',\r\n  state: {\r\n    reportParametersData: [],\r\n    reportFormedData: [],\r\n    dataStore: [],\r\n    columns: [],\r\n    contractData: {},\r\n    references: {},\r\n    publish: {}\r\n  },\r\n  effects: {\r\n    * getContractById(payload, { call, put }) {\r\n      const response = yield call(getObject, payload);\r\n\r\n      yield put({\r\n        type: 'getListDataByContract',\r\n        payload: response || {},\r\n      });\r\n    },\r\n    * getPublish(payload, { call, put }) {\r\n      const response = yield call(getPublish, payload);\r\n\r\n      yield put({\r\n        type: 'getPublishReducer',\r\n        payload: response || {},\r\n      });\r\n    },\r\n\r\n    * getList(payload, { call, put }) {\r\n      const response = yield call(getList, payload);\r\n      yield put({\r\n        type: 'getListData',\r\n        payload: {\r\n          type: payload.payload.entity,\r\n          response: response || {},\r\n        },\r\n      });\r\n\r\n    },\r\n\r\n    * formedReports(payload, { call, put }) {\r\n      const response = yield call(getFormedReports, payload);\r\n\r\n      yield put({\r\n        type: 'formedReportsData',\r\n        payload: response || {},\r\n      });\r\n    },\r\n\r\n    * reportParameters(payload, { call, put }) {\r\n      const response = yield call(getReportParameters, payload);\r\n\r\n      yield put({\r\n        type: 'reportParametersData',\r\n        payload: response || {},\r\n      });\r\n    },\r\n\r\n    * reportsData(payload, { call, put }) {\r\n      const response = yield call(getReportsList, payload);\r\n\r\n      yield put({\r\n        type: 'getData',\r\n        payload: response || {},\r\n      });\r\n    },\r\n    * statisticsData(payload, { call, put }) {\r\n      const response = yield call(getStaticticsData, payload);\r\n\r\n      yield put({\r\n        type: 'getData',\r\n        payload: response || {},\r\n      });\r\n    },\r\n    * journalData(payload, { call, put }) {\r\n      const response = yield call(getJournalData, payload);\r\n\r\n      yield put({\r\n        type: 'getData',\r\n        payload: response || {},\r\n      });\r\n    },\r\n    * clear(payload, { call, put }) {\r\n      yield put({\r\n        type: 'clearData',\r\n      });\r\n    },\r\n    * data(payload, { call, put }) {\r\n\r\n      const response = yield call(getData, payload);\r\n\r\n      yield put({\r\n        type: 'getData',\r\n        payload: response || {},\r\n      });\r\n    },\r\n    * columns(payload, { call, put }) {\r\n\r\n      const response = yield call(getColumns, payload);\r\n\r\n      yield put({\r\n        type: 'getColumns',\r\n        payload: response,\r\n      });\r\n    },\r\n    * clearContract(payload, { call, put }) {\r\n      yield put({\r\n        type: 'clearContractData',\r\n        payload: {},\r\n      });\r\n    },\r\n  },\r\n  reducers: {\r\n    getPublishReducer(state, { payload }) {\r\n      return {\r\n        ...state,\r\n        publish: payload,\r\n      };\r\n    },\r\n    getListDataByContract(state, { payload }) {\r\n      return {\r\n        ...state,\r\n        contractData: payload,\r\n      };\r\n    },\r\n\r\n    loading(state, { payload }) {\r\n      return {\r\n        ...state,\r\n        loading: payload,\r\n      };\r\n    },\r\n    getListData(state, { payload }) {\r\n      return {\r\n        ...state,\r\n        references: {\r\n          ...state.references,\r\n          [payload.type]: payload.response,\r\n        },\r\n      };\r\n    },\r\n\r\n    clearData(state, { payload }) {\r\n      return {\r\n        ...state,\r\n        columns: [],\r\n        dataStore: [],\r\n      };\r\n    },\r\n    getData(state, { payload }) {\r\n      return {\r\n        ...state,\r\n        dataStore: payload,\r\n      };\r\n    },\r\n    getColumns(state, { payload }) {\r\n      return {\r\n        ...state,\r\n        columns: payload,\r\n      };\r\n    },\r\n    formedReportsData(state, { payload }) {\r\n      return {\r\n        ...state,\r\n        reportFormedData: payload,\r\n      };\r\n    },\r\n    reportParametersData(state, { payload }) {\r\n      return {\r\n        ...state,\r\n        reportParametersData: payload,\r\n      };\r\n    },\r\n\r\n    clearContractData(state, { payload }) {\r\n      return {\r\n        ...state,\r\n        contractData: {},\r\n      };\r\n    },\r\n  },\r\n};\r\n"],"file":"universal2.js"}