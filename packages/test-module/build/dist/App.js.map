{"version":3,"sources":["../../src/App.js"],"names":["App","props","simpleAuthCheck","promiseAuthCheck","getAuthToken","requestStarted","requestFinished","getUserLanguage","subscribeToUserLanguageChange","setUserLanguage","APP_ROUTE_KEY","appRoute","history","display","flexDirection","flexGrow","handleNoMatch","React","Component"],"mappings":";;;;;;;AAAA;;AACA;;AACA;;AACA;;;;;;;;;;;;;;;;;;;;;;;;IAGMA,G;;;;;AACJ,eAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACjB,6EAAMA,KAAN;AAEA,kCAAkB,iBAAlB,EAAqCA,KAAK,CAACC,eAA3C;AACA,kCAAkB,kBAAlB,EAAsCD,KAAK,CAACE,gBAA5C;AACA,kCAAkB,cAAlB,EAAkCF,KAAK,CAACG,YAAxC;AACA,kCAAkB,gBAAlB,EAAoCH,KAAK,CAACI,cAA1C;AACA,kCAAkB,iBAAlB,EAAqCJ,KAAK,CAACK,eAA3C;AACA,kCAAkB,iBAAlB,EAAqCL,KAAK,CAACM,eAA3C;;AACA,QAAIN,KAAK,CAACO,6BAAV,EAAyC;AACvCP,MAAAA,KAAK,CAACO,6BAAN,CAAoCC,sBAApC;AACD;;AACD,6BAAaC,uBAAb,EAA4BT,KAAK,CAACU,QAAlC;AACA,6BAAa,SAAb,EAAwBV,KAAK,CAACW,OAA9B;AAbiB;AAclB;;;;6BAEQ;AACP,aACE,6BAAC,cAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAK,QAAA,KAAK,EAAE;AAAEC,UAAAA,OAAO,EAAE,MAAX;AAAmBC,UAAAA,aAAa,EAAE,QAAlC;AAA4CC,UAAAA,QAAQ,EAAE,mBAAO,KAAKd,KAAL,CAAWe,aAAlB,IAAmC,CAAnC,GAAuC;AAA7F,SAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,6BAAC,mBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,6BAAC,sBAAD;AACE,QAAA,KAAK,MADP;AAEE,QAAA,IAAI,EAAE,6BAAc,yBAAd,EAA6B,kBAA7B,CAFR;AAGE,QAAA,eAAe,EAAE,2BAAe,iBAAf,CAHnB;AAIE,QAAA,gBAAgB,EAAE,2BAAe,kBAAf,CAJpB;AAKE,QAAA,MAAM,EAAE;AAAA,iBAAM;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BAAN;AAAA,SALV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,EAQE,6BAAC,sBAAD;AAAc,QAAA,MAAM,EAAE,mBAAO,KAAKf,KAAL,CAAWe,aAAlB,CAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QARF,CADF,CADF,CADF;AAgBD;;;;EAlCeC,eAAMC,S;;eAqCTlB,G","sourcesContent":["import { APP_ROUTE_KEY, buildAppRoute, NoMatchRoute, PrivateRoute } from '@vitacore/shared-ui'\nimport React from 'react'\nimport { Switch } from 'react-router'\nimport { addToAppData, addToAppFunctions, getAppFunction, getAppRoute, setUserLanguage } from './utils'\nimport { isTrue } from './utils'\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props)\n\n    addToAppFunctions('simpleAuthCheck', props.simpleAuthCheck)\n    addToAppFunctions('promiseAuthCheck', props.promiseAuthCheck)\n    addToAppFunctions('getAuthToken', props.getAuthToken)\n    addToAppFunctions('requestStarted', props.requestStarted)\n    addToAppFunctions('requestFinished', props.requestFinished)\n    addToAppFunctions('getUserLanguage', props.getUserLanguage)\n    if (props.subscribeToUserLanguageChange) {\n      props.subscribeToUserLanguageChange(setUserLanguage)\n    }\n    addToAppData(APP_ROUTE_KEY, props.appRoute)\n    addToAppData('history', props.history)\n  }\n\n  render() {\n    return (\n      <React.Fragment>\n        <div style={{ display: 'flex', flexDirection: 'column', flexGrow: isTrue(this.props.handleNoMatch) ? 1 : 0 }}>\n          <Switch>\n            <PrivateRoute\n              exact\n              path={buildAppRoute(getAppRoute(), '/cabinet/profile')}\n              simpleAuthCheck={getAppFunction('simpleAuthCheck')}\n              promiseAuthCheck={getAppFunction('promiseAuthCheck')}\n              render={() => <div>WELL DONE!!!</div>}\n            />\n            <NoMatchRoute handle={isTrue(this.props.handleNoMatch)}  />\n          </Switch>\n        </div>\n      </React.Fragment>\n    )\n  }\n}\n\nexport default App\n"],"file":"App.js"}